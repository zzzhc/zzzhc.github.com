<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: rails | zzzhc's Blog]]></title>
  <link href="http://blog.zzzhc.com/categories/rails/atom.xml" rel="self"/>
  <link href="http://blog.zzzhc.com/"/>
  <updated>2011-12-16T17:20:48+08:00</updated>
  <id>http://blog.zzzhc.com/</id>
  <author>
    <name><![CDATA[zzzhc]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ack - better grep]]></title>
    <link href="http://blog.zzzhc.com/posts/2011-12-16-ack-better-grep/"/>
    <updated>2011-12-16T16:40:00+08:00</updated>
    <id>http://blog.zzzhc.com/posts/ack-better-grep</id>
    <content type="html"><![CDATA[<p><a href="http://betterthangrep.com/">Ack</a>是一个给程序员用的grep, 使用perl regular expressions, 而不是POSIX/GNU subset.</p>

<h2>why ack?</h2>

<ul>
<li>使用perl regular expressions, 忘掉grep那套不人性的pattern吧</li>
<li>速度快, 默认只搜索程序代码文件</li>
<li>自动忽略.svn, .git, CVS这类目录, 默认递归搜索子目录</li>
</ul>


<p>``` bash</p>

<h1>with grep</h1>

<p>$ grep pattern $(find . -type f | grep -v '.svn')
or
$ grep -R --exclude-dir .svn pattern</p>

<h1>with ack</h1>

<p>$ ack pattern
```</p>

<ul>
<li>支持搜索指定文件类型</li>
</ul>


<p>``` bash</p>

<h1>只搜索ruby code</h1>

<p>$ ack --ruby pattern
```</p>

<h2>install</h2>

<p>``` bash</p>

<h1>mac</h1>

<p>$ brew install ack</p>

<h1>ubuntu</h1>

<p>$ sudo apt-get install ack-grep
```</p>

<h2>integrate into vim</h2>

<ul>
<li>install <a href="https://github.com/mileszs/ack.vim">ack.vim</a></li>
<li>set grepprg=ack in vimrc</li>
</ul>


<h2>custom ack</h2>

<p>Ack默认包含很多filetype => extensions的设置，但新出现的语言不一定支持。好在ack提供<code>--type-add TYPE=.EXTENSION[,.EXT2[,...]]</code>, <code>--type-set TYPE=.EXTENSION[,.EXT2[,...]]</code>来扩展。经常用的可以加到~/.ackrc里, 我的.ackrc:</p>

<p><code>bash
$ cat ~/.ackrc
--type-add
ruby=.haml,.ru
--type-add
css=.scss,.sass,.less
--type-add
js=.coffee
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[speed up rails asset pipeline]]></title>
    <link href="http://blog.zzzhc.com/posts/2011-12-11-speed-up-rails-asset-pipeline/"/>
    <updated>2011-12-11T20:48:00+08:00</updated>
    <id>http://blog.zzzhc.com/posts/speed-up-rails-asset-pipeline</id>
    <content type="html"><![CDATA[<p><a href="http://guides.rubyonrails.org/asset_pipeline.html">Asset pipeline</a>是Rails 3.1里引入的一个特性, 用来帮助拼接，压缩js/css,同时对缓存asset提供了更好的支持.</p>

<p>Asset pipe本身只是对<a href="https://github.com/sstephenson/sprockets">Sprockets</a>做了一层封装, 通过<code>Rails.application.assets</code>可以得到Sprockets自己的rack app.</p>

<p>如果application.js里用到了一堆的js, 在development模式下会发现页面很慢, 即使用了<a href="https://github.com/paneq/active_reload">active_reload</a>来加速.在chrome console里看下network tab，每次js请求都在100ms以上。慢的原因在于每次请求都要过一次Rails/application里定义的middleware, 跳过这些middleware之后就快多了. 改下config.ru, 世界又和谐了:</p>

<p>``` ruby</p>

<h1>This file is used by Rack-based servers to start the application.</h1>

<p>require ::File.expand_path('../config/environment',  <strong>FILE</strong>)</p>

<p>map '/assets' do
  assets = Rails.application.assets
  run assets
end</p>

<p>map '/' do
  run Rails.application
end
```</p>
]]></content>
  </entry>
  
</feed>
